{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { deleteDoc, doc } from \"firebase/firestore\";\nimport { useRecoilState } from \"recoil\";\nimport { allTasksState } from \"../atoms/TasksAtom\";\nimport { firestore } from \"../firebase/clientApp\";\n\nconst useTasks = () => {\n  _s();\n\n  const [tasksStateValue, setTasksStateValue] = useRecoilState(allTasksState);\n\n  const onDeleteTask = async task => {\n    console.log(\"DELETING Task: \", task.id);\n\n    try {\n      // delete post from posts collection\n      const tasksDocRef = doc(firestore, \"tasks\", task.id);\n      await deleteDoc(tasksDocRef); // Update post state\n\n      setTasksStateValue(prev => ({ ...prev,\n        allTasks: prev.allTasks.filter(item => item.id !== task.id || item.uuid !== task.uuid)\n      }));\n      return true;\n    } catch (error) {\n      console.log(\"THERE WAS AN ERROR\", error);\n      return false;\n    }\n  };\n\n  return {\n    tasksStateValue,\n    setTasksStateValue,\n    onDeleteTask\n  };\n};\n\n_s(useTasks, \"F31Fe6jvu01taX1YHb12fIgHLI4=\", false, function () {\n  return [useRecoilState];\n});\n\nexport default useTasks;","map":{"version":3,"names":["deleteDoc","doc","useRecoilState","allTasksState","firestore","useTasks","tasksStateValue","setTasksStateValue","onDeleteTask","task","console","log","id","tasksDocRef","prev","allTasks","filter","item","uuid","error"],"sources":["C:/Users/willi/Desktop/Web Projects/Impactly/my-app/src/hooks/useTasks.tsx"],"sourcesContent":["import { deleteDoc, doc } from \"firebase/firestore\";\r\nimport React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { allTasksState, Task } from \"../atoms/TasksAtom\";\r\nimport { firestore} from \"../firebase/clientApp\";\r\nconst useTasks = () => {\r\n  const [tasksStateValue, setTasksStateValue] = useRecoilState(allTasksState);\r\n\r\n  const onDeleteTask = async (task: Task) =>{\r\n    console.log(\"DELETING Task: \", task.id);\r\n\r\n    try {\r\n      // delete post from posts collection\r\n      const tasksDocRef = doc(firestore, \"tasks\", task.id);\r\n      await deleteDoc(tasksDocRef);\r\n\r\n      // Update post state\r\n      setTasksStateValue((prev) => ({\r\n        ...prev,\r\n        allTasks: prev.allTasks.filter(\r\n          (item) => item.id !== task.id || item.uuid !== task.uuid \r\n        ),\r\n      }));\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.log(\"THERE WAS AN ERROR\", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return{\r\n    tasksStateValue,\r\n    setTasksStateValue,\r\n    onDeleteTask,\r\n  }\r\n};\r\nexport default useTasks;\r\n"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,GAApB,QAA+B,oBAA/B;AAEA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,aAAT,QAAoC,oBAApC;AACA,SAASC,SAAT,QAAyB,uBAAzB;;AACA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,cAAc,CAACC,aAAD,CAA5D;;EAEA,MAAMK,YAAY,GAAG,MAAOC,IAAP,IAAqB;IACxCC,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,IAAI,CAACG,EAApC;;IAEA,IAAI;MACF;MACA,MAAMC,WAAW,GAAGZ,GAAG,CAACG,SAAD,EAAY,OAAZ,EAAqBK,IAAI,CAACG,EAA1B,CAAvB;MACA,MAAMZ,SAAS,CAACa,WAAD,CAAf,CAHE,CAKF;;MACAN,kBAAkB,CAAEO,IAAD,KAAW,EAC5B,GAAGA,IADyB;QAE5BC,QAAQ,EAAED,IAAI,CAACC,QAAL,CAAcC,MAAd,CACPC,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYH,IAAI,CAACG,EAAjB,IAAuBK,IAAI,CAACC,IAAL,KAAcT,IAAI,CAACS,IAD5C;MAFkB,CAAX,CAAD,CAAlB;MAOA,OAAO,IAAP;IACD,CAdD,CAcE,OAAOC,KAAP,EAAc;MACdT,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCQ,KAAlC;MACA,OAAO,KAAP;IACD;EACF,CArBD;;EAuBA,OAAM;IACJb,eADI;IAEJC,kBAFI;IAGJC;EAHI,CAAN;AAKD,CA/BD;;GAAMH,Q;UAC0CH,c;;;AA+BhD,eAAeG,QAAf"},"metadata":{},"sourceType":"module"}