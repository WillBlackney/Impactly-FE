{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\willi\\\\Desktop\\\\Web Projects\\\\Impactly\\\\my-app\\\\src\\\\components\\\\TaskCard.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Card, CardActions, CardContent, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { allTasksState } from \"../atoms/TasksAtom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskCard = _ref => {\n  _s();\n\n  let {\n    task,\n    onDeleteTask\n  } = _ref;\n  const [tasksStateValue, setTasksStateValue] = useRecoilState(allTasksState);\n\n  const handleDelete = async event => {\n    event.stopPropagation();\n\n    try {\n      const success = await onDeleteTask(task);\n      if (!success) throw new Error(\"Failed to delete task\");\n      console.log(\"Task successfully deleted\");\n    } catch (error) {\n      console.log(\"Error deleting task\", error.message);\n    }\n\n    console.log(\"new tasks state\", tasksStateValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 550\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"div\",\n        children: task.taskName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: task.taskDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleDelete,\n        size: \"small\",\n        children: \"Delete Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskCard, \"F31Fe6jvu01taX1YHb12fIgHLI4=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = TaskCard;\nexport default TaskCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"names":["Button","Card","CardActions","CardContent","Typography","React","useRecoilState","allTasksState","TaskCard","task","onDeleteTask","tasksStateValue","setTasksStateValue","handleDelete","event","stopPropagation","success","Error","console","log","error","message","width","taskName","taskDescription"],"sources":["C:/Users/willi/Desktop/Web Projects/Impactly/my-app/src/components/TaskCard.tsx"],"sourcesContent":["import {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { allTasksState, Task } from \"../atoms/TasksAtom\";\r\n\r\ntype TaskCardProps = {\r\n  task: Task;\r\n  onDeleteTask: (task: Task) => Promise<boolean>;\r\n};\r\n\r\nconst TaskCard: React.FC<TaskCardProps> = ({ task, onDeleteTask }) => {\r\n    const [tasksStateValue, setTasksStateValue] = useRecoilState(allTasksState);\r\n    const handleDelete = async (\r\n        event: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n      ) => {\r\n        event.stopPropagation();\r\n        try {\r\n          const success = await onDeleteTask(task);\r\n          if (!success) throw new Error(\"Failed to delete task\");\r\n    \r\n          console.log(\"Task successfully deleted\");\r\n    \r\n        } catch (error: any) {\r\n          console.log(\"Error deleting task\", error.message);\r\n        }\r\n\r\n        console.log(\"new tasks state\", tasksStateValue)\r\n      };\r\n\r\n  return (\r\n    <Card sx={{ width: 550}}>\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n          {task.taskName}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          {task.taskDescription}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button onClick={handleDelete} size=\"small\">Delete Task</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\nexport default TaskCard;\r\n"],"mappings":";;;AAAA,SACEA,MADF,EAEEC,IAFF,EAGEC,WAHF,EAIEC,WAJF,EAKEC,UALF,QAMO,eANP;AAOA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,aAAT,QAAoC,oBAApC;;;AAOA,MAAMC,QAAiC,GAAG,QAA4B;EAAA;;EAAA,IAA3B;IAAEC,IAAF;IAAQC;EAAR,CAA2B;EAClE,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCN,cAAc,CAACC,aAAD,CAA5D;;EACA,MAAMM,YAAY,GAAG,MACjBC,KADiB,IAEd;IACHA,KAAK,CAACC,eAAN;;IACA,IAAI;MACF,MAAMC,OAAO,GAAG,MAAMN,YAAY,CAACD,IAAD,CAAlC;MACA,IAAI,CAACO,OAAL,EAAc,MAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;MAEdC,OAAO,CAACC,GAAR,CAAY,2BAAZ;IAED,CAND,CAME,OAAOC,KAAP,EAAmB;MACnBF,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCC,KAAK,CAACC,OAAzC;IACD;;IAEDH,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BR,eAA/B;EACD,CAfH;;EAiBF,oBACE,QAAC,IAAD;IAAM,EAAE,EAAE;MAAEW,KAAK,EAAE;IAAT,CAAV;IAAA,wBACE,QAAC,WAAD;MAAA,wBACE,QAAC,UAAD;QAAY,YAAY,MAAxB;QAAyB,OAAO,EAAC,IAAjC;QAAsC,SAAS,EAAC,KAAhD;QAAA,UACGb,IAAI,CAACc;MADR;QAAA;QAAA;QAAA;MAAA,QADF,eAIE,QAAC,UAAD;QAAY,OAAO,EAAC,OAApB;QAA4B,KAAK,EAAC,gBAAlC;QAAA,UACGd,IAAI,CAACe;MADR;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eASE,QAAC,WAAD;MAAA,uBACE,QAAC,MAAD;QAAQ,OAAO,EAAEX,YAAjB;QAA+B,IAAI,EAAC,OAApC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CAlCD;;GAAML,Q;UAC4CF,c;;;KAD5CE,Q;AAmCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}